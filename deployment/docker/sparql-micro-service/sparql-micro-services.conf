# Make html templates available over HTTP for SPARQL Template (STTL), 
# a security requirement of Corese starting at version 4.1.6.
# They are used for the SPARQL micro-service html documentation and index, as well as the demo.

Alias "/sttl/sms-html-index" "/sparql-micro-service/src/sparqlms/resources/sms-html-index"
Alias "/sttl/sms-html-description" "/sparql-micro-service/src/sparqlms/resources/sms-html-description"



# Set up Apache Web server for SPARQL micro-services.
# http://localhost:8081 is the URL of Corese (SPARQL endpoint and triple store serving service description graphs)

<VirtualHost *:80>
    ServerName localhost
	DocumentRoot /var/www/html
    RewriteEngine on

    # Increase default timeout for services that may take a long time to complete
    ProxyTimeout 300

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn, error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular modules, e.g.:
	#LogLevel info ssl:warn
    #LogLevel warn rewrite:trace2

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

    # ---- Service Descriptions and Shapes graphs ----
    
    RewriteRule "^/?$" "/service" [R,L]

    # Root URL lookup with HTML type requested: return index of SPARQL micro-services
    RewriteCond %{HTTP_ACCEPT} text/html
    RewriteCond %{QUERY_STRING} ^$
    RewriteCond %{REQUEST_METHOD} GET
    RewriteRule "^/service/?$" "http://corese:8081/service/sms-html-index?param=http://localhost/service" [P,L]

    # SPARQL micro-service URL lookup with HTML type requested and no parameter: return HTML documentation
    RewriteCond %{HTTP_ACCEPT} text/html
    RewriteCond %{QUERY_STRING} ^$
    RewriteCond %{REQUEST_METHOD} GET
    RewriteRule "^/service/([^/?]+)/([^/?]+)/?$" "http://corese:8081/service/sms-html-description?param=http://localhost/service/$1/$2/" [P,L]

    # SPARQL micro-service URL lookup without parameters: return the service description
    RewriteCond %{HTTP_ACCEPT} !text/html
    RewriteCond %{QUERY_STRING} ^$
    RewriteCond %{REQUEST_METHOD} GET
    RewriteRule "^/service/([^/?]+)/([^/?]+)/?$" "http://corese:8081/sparql?query=CONSTRUCT+FROM+<http://localhost/service/$1/$2/ServiceDescription>+WHERE+{?s+?p+?o}" [P,L]

    # Dereferencing of the ServiceDescripton graphs
    RewriteRule "^/service/([^/?]+)/([^/?]+)/ServiceDescription$" "http://corese:8081/sparql?query=CONSTRUCT+FROM+<http://localhost/service/$1/$2/ServiceDescription>+WHERE+{?s+?p+?o}" [P,L]

    # Dereferencing of the ShapesGraph graphs
    RewriteRule "^/service/([^/?]+)/([^/?]+)/ShapesGraph$" "http://corese:8081/sparql?query=CONSTRUCT+FROM+<http://localhost/service/$1/$2/ShapesGraph>+WHERE+{?s+?p+?o}" [P,L]


    # ---- SPARQL micro-services invocation ----

    # Query a SPARQL micro service, e.g. /service/macaulaylibrary/getAudioByTaxon?name=Delphinus+delphis
    RewriteRule "^/service/([^/?]+)/([^/?]+).*$" /sparql-ms/src/sparqlms/service.php?root_url=http://localhost/service&querymode=sparql&service=$1/$2 [QSA,P,L]


    # ---- URI dereferencing ----

    # Dereferencing of Flickr URIs
    RewriteRule "^/ld/flickr/photo/(.*)$" /sparql-ms/src/sparqlms/service.php?root_url=http://localhost/service&querymode=ld&service=flickr/getPhotoById&query=&photo_id=$1 [P,L]

</VirtualHost>
