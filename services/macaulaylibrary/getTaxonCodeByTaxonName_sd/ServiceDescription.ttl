@prefix xsd:     <http://www.w3.org/2001/XMLSchema#>.
@prefix sd:      <http://www.w3.org/ns/sparql-service-description#>.
@prefix frmt:    <http://www.w3.org/ns/formats/>.
@prefix dct:     <http://purl.org/dc/terms/>.
@prefix shacl:   <http://www.w3.org/ns/shacl#>.
@prefix void:    <http://rdfs.org/ns/void#>.
@prefix hydra:   <http://www.w3.org/ns/hydra/core#>.
@prefix schema:  <http://schema.org/>.
@prefix dwc:     <http://rs.tdwg.org/dwc/terms/>.
@prefix sms:     <http://ns.inria.fr/sparql-micro-service#>.

@base            <http://example.org/sparql-ms/macaulaylibrary/getTaxonCodeByTaxonName_sd/>.

# This file is loaded as graph <ServiceDescription>
<>
    a sd:Service, sms:Service;
    sd:endpoint <>;
    sd:supportedLanguage sd:SPARQL11Query;
    sd:feature sd:BasicFederatedQuery, sd:EmptyGraphs;
    sd:resultFormat frmt:SPARQL_Results_XML, frmt:SPARQL_Results_JSON, frmt:SPARQL_Results_CSV, frmt:SPARQL_Results_TSV,
                    frmt:RDF_XML, frmt:Turtle, frmt:JSON-LD, frmt:Trig;
    schema:name "Search the Macaulay Library for the taxon code(s) corresponding to a taxon name";
    schema:description "SPARQL micro-service wrapping the Macaulay Library Web API to search taxon code(s) corresponding to a taxon name.";
    
    sd:defaultDataset [
        a sd:Dataset, void:Dataset;
        sd:defaultGraph [ a sd:Graph; shacl:shapesGraph <ShapesGraph> ];
        sd:namedGraph   [ a sd:Graph; sd:name <ServiceDescription> ];
        sd:namedGraph   [ a sd:Graph; sd:name <ShapesGraph> ];
        
        void:vocabulary <http://schema.org/>, <http://rs.tdwg.org/dwc/terms/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/ns/hydra/core#>;
        void:sparqlEndpoint <>;
        
        # Topics description
        foaf:topic <http://dbpedia.org/page/Audio_signal>, <https://www.wikidata.org/entity/Q47041>; # Biodiversity
        schema:keywords "audio"@en, "media"@en, "biodiversity"@en;
    ];

    schema:keywords "biodiversity", "lifesciences", "fauna", "bird", "amphibian", "mammal", "species", "audio", "sound", "animal call", "recording";
    schema:citation <https://www.mdpi.com/2078-2489/9/12/310>;
    schema:publisher [ a schema:Organization;
        schema:name "Université Côte d'Azur, CNRS, Inria, I3S";
        schema:logo
            "http://univ-cotedazur.fr/fr/university/communication-presse/charte-et-logos/logo/png/uca-logo-large",
            "https://iww.inria.fr/dircom/logoinria-eng.png",
            "http://www.cnrs.fr/themes/custom/cnrs/logo.svg";
        schema:contactPoint [ a schema:ContactPoint;
            schema:contactType "technical support";
            schema:name "Franck Michel";
            schema:email "franck.michel@cnrs.fr";
            schema:url <https://w3id.org/people/franckmichel>;
        ];
    ];

    sms:exampleQuery '''
        prefix schema: <http://schema.org/>
        prefix dwc: <http://rs.tdwg.org/dwc/terms/>

        SELECT ?taxonCode WHERE {

            []  a dwc:Taxon;
                dwc:scientificName "Delphinus delphis";
                schema:identifier ?taxonCode.
        }''';
        
    dct:source [
        a schema:WebAPI; schema:name "Macaulay Library Web API";
        schema:url <https://www.macaulaylibrary.org/>;
        schema:potentialAction <APIService>;
    ];
    
    # Maxium time (in seconds) to cache responses from the Web API. Default: 2592000 = 30 days
    sms:cacheExpiresAfter "P2592000S"^^xsd:duration;

    # Add provenance information to the graph generated at each invocation?
    sms:addProvenance "false"^^xsd:boolean;
    .

# Web API service being wrapped by this µ-service + parameters binding
<APIService>
    a schema:SearchAction;
    schema:documentation "The taxon code name must be provided by property schema:identifier in the SPARQL graph pattern.";

    a hydra:IriTemplate;
    hydra:template "https://taxonomy.api.macaulaylibrary.org/v1/taxonomy?key=PUB4334626458&q={name}";
    hydra:mapping [
        hydra:variable "name";
        schema:description "The taxon scientific name without authorship nor date information";
        hydra:required "true"^^xsd:boolean;
        hydra:property dwc:scientificName;
    ].
