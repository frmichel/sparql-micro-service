CONSTRUCT {
    ?photoUri a schema:Photograph;
        
        # Reinject the service argument into the graph
        schema:keywords         {tags};

        schema:name             ?title;
        schema:contentUrl       ?img; foaf:depiction ?img;
        schema:thumbnailUrl     ?thumbnail;

        schema:mainEntityOfPage ?pageUrl;
        schema:fileFormat       "image/jpeg";
        schema:dateCreated      ?dateTaken;

        schema:author           ?ownerUrl.

    ?ownerUrl
            a schema:Person;
            schema:identifier ?owner; schema:name ?ownerName; schema:url ?ownerUrl.
}
WHERE {
    ?photo 
        api:id      ?id; api:secret ?secret; api:server ?server; api:farm ?farm;
        api:title   ?title;
        api:owner   ?owner;
        .

    OPTIONAL { ?photo api:ownername ?ownerName }
    OPTIONAL { ?photo api:datetaken ?dateTaken }

    # Dereferenceable URI: customize with the hostname of your Web server
    bind (IRI(concat("http://example.org/ld/flickr/photo/", ?id)) AS ?photoUri)

    bind (IRI(concat("https://flickr.com/photos/", ?owner, "/", ?id)) AS ?pageUrl)
    bind (IRI(concat("https://flickr.com/photos/", ?owner)) AS ?ownerUrl)
    bind (IRI(concat("https://farm", ?farm, ".staticflickr.com/", ?server, "/", ?id, "_", ?secret, "_z.jpg")) AS ?img)
    bind (IRI(concat("https://farm", ?farm, ".staticflickr.com/", ?server, "/", ?id, "_", ?secret, "_s.jpg")) AS ?thumbnail)
}
